apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kotlin {
    experimental {
        coroutines 'enable'
    }
}

def majorVersion = 2
def minorVersion = 1
def patchVersion = 1

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.philpot.nowplayinghistory"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode majorVersion * 1000 + minorVersion * 100 + patchVersion
        versionName "${majorVersion}.${minorVersion}.${patchVersion}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/main.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'

    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    //kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha03"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.savedstateVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    implementation "androidx.viewpager2:viewpager2:$rootProject.viewPagerVersion"
    implementation "androidx.work:work-runtime-ktx:$rootProject.workVersion"
    implementation "androidx.paging:paging-runtime:$rootProject.pagingVersion" // For Kotlin use paging-runtime-ktx
    //implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    //*implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${rootProject.coroutinesVersion}"

    //joda time for android
    implementation "net.danlew:android.joda:${rootProject.danlewJodaTimeVersion}"

    //dependency injection
    implementation "org.kodein.di:kodein-di-erased-jvm:${rootProject.kodeinVersion}"
    implementation "org.kodein.di:kodein-di-framework-android-x:${rootProject.kodeinVersion}"

    //trying out coil for image caching
    implementation("io.coil-kt:coil:${rootProject.coilVersion}") {
        exclude group: 'androidx.appcompat', module: 'appcompat-resources'
    }

    //sqlcipher
    implementation "net.zetetic:android-database-sqlcipher:${rootProject.sqlCipherVersion}"

    //recyclerview animations
    //implementation 'jp.wasabeef:recyclerview-animators:3.0.0'

    //okhttp3 woohoo
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okHttpVersion}"
    implementation "com.squareup.okhttp3:okhttp:${rootProject.okHttpVersion}"

    //for memoryleak testing
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.leakCanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
